version: "3.7"
services:
## BASE DE DATOS MYSQL
    mysql:
        image: ${MYSQL_IMAGE}
        command: --default-authentication-plugin=mysql_native_password
        container_name: mysql
        restart: ${RESTART}
        # DESCOMENTAR PARA PERSISTIR DATA
        #volumes:
        #  - D:\desarrollo\databases\mysql:/var/lib/mysql
        environment:
          MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
          MYSQL_DATABASE: ${MYSQL_DATABASE}
          MYSQL_USER: ${MYSQL_USER}
          MYSQL_PASSWORD: ${MYSQL_PASSWORD}
          MYSQL_ROOT_HOST: ${MYSQL_HOST}
        ports:
          - "${MYSQL_PORT}:${MYSQL_PORT}"
## BASE DE DATOS SQLSERVER
    sqlserver:
        image: ${SQL_IMAGE}
        container_name: sqlserver
        restart: ${RESTART}
        # DESCOMENTAR PARA PERSISTIR DATA
        #volumes:
        #  - D:\desarrollo\databases\sqlserver:/var/opt/mssql
        environment:
          ACCEPT_EULA: ${SQL_ACCEPT_EULA}
          SA_PASSWORD: ${SQL_SA_PASSWORD}
          MSSQL_PID: ${SQL_MSSQL_PID}
        ports:
          - "${SQL_SERVER_EXPORT_PORT}:${SQL_SERVER_PORT}"
## BASE DE DATOS POSTGRES
    postgres:
        image: ${POSTGRES_IMAGE}
        container_name: postgres
        restart: ${RESTART}
        # DESCOMENTAR PARA PERSISTIR DATA
        volumes:
          - D:\DEV\databases-data\postgresql:/var/lib/postgresql/data
          - ./conf/postgres.conf:/etc/postgresql/postgresql.conf
        environment:
          POSTGRES_USER: ${POSTGRES_USER}
          POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
          POSTGRES_DB: ${POSTGRES_DB}
        ports:
          - "${POSTGRES_PORT}:${POSTGRES_PORT}"
        command: postgres -c config_file=/etc/postgresql/postgresql.conf
  ## BASE DE DATOS MONGO
    mongodb:
      image: ${MONGO_IMAGE}
      command: --serviceExecutor adaptive
      container_name: mongodb
      restart: ${RESTART}
      # DESCOMENTAR PARA PERSISTIR DATA
      #volumes:
      #  - D:\desarrollo\databases\mongodb:/data/db
      environment:
        MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
        MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
        MONGO_INITDB_DATABASE: ${MONGO_DB}
      ports:
        - "${MONGO_PORT}:${MONGO_PORT}"
## BASE DE DATOS REDIS
    redis:
      image: ${REDIS_IMAGE}
      command: redis-server --requirepass ${REDIS_PASS}
      container_name: redis
      restart: ${RESTART}
      # DESCOMENTAR PARA PERSISTIR DATA
      #volumes:
      #  - D:\desarrollo\databases\redis:/var/lib/redis
      #  - D:\desarrollo\databases\redis\redis.conf:/usr/local/etc/redis/redis.conf
      environment:
        REDIS_REPLICATION_MODE: ${REDIS_MODE}
      ports:
        - "${REDIS_PORT}:${REDIS_PORT}"
## REDIS CLIENT
    redis-commander:
      image: ${REDIS_COMMANDER}
      container_name: redis-commander
      restart: ${RESTART}
      links:
        - redis
      environment:
        REDIS_PASSWORD: ${REDIS_PASS}
        REDIS_HOST: redis
        REDIS_PORT: ${REDIS_PORT}
      ports:
        - "${REDIS_COMMANDER_PORT}:${REDIS_COMMANDER_PORT}"


#Eliminar Imagenes
#docker rmi $(docker images --filter “dangling=true” -q --no-trunc)
#docker-compose up -d --build --rm
#conectarse a sql server: localhost,1433
